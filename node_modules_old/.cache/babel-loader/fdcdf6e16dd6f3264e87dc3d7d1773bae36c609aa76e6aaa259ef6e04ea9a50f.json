{"ast":null,"code":"var _jsxFileName = \"/Users/hoangnguyen/Downloads/Workspace/Laravel/test0211/fronend/src/Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [publisher, setPublisher] = useState('');\n  const postsApi = 'http://127.0.0.1:8000/api/books';\n  const putPostApi = 'http://127.0.0.1:8000/api/book';\n  useEffect(() => {\n    fetch(postsApi).then(response => response.json()).then(posts => setPosts(posts));\n  }, []);\n  const putPost = () => {\n    var options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        author,\n        publisher\n      })\n    };\n    fetch(putPostApi, options).then(response => response.json()).then(console.log('OK'));\n  };\n  const deletePost = id => {\n    var options = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(putPostApi + '/' + id, options).then(response => response.json()).then(console.log('OK'));\n  };\n  console.log(title, author, publisher);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          placeholder: \"Enter title\",\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Author : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: author,\n          placeholder: \"Enter author\",\n          onChange: e => setAuthor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Publisher : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: publisher,\n          placeholder: \"Enter publisher\",\n          onChange: e => setPublisher(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [title || 'Title', \" - \", author || 'Author', \" - \", publisher || 'Publisher']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [post.id, \" - \", post.title, \" - \", post.author, \" - \", post.publisher]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: putPost,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deletePost,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"MtBI8H+JtwbiyuR+dusUtEqSd1E=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useEffect","Posts","posts","setPosts","title","setTitle","author","setAuthor","publisher","setPublisher","postsApi","putPostApi","fetch","then","response","json","putPost","options","method","headers","body","JSON","stringify","console","log","deletePost","id","e","target","value","map","post"],"sources":["/Users/hoangnguyen/Downloads/Workspace/Laravel/test0211/fronend/src/Posts.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nfunction Posts() {\n\n  const [posts, setPosts] = useState([])\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [publisher, setPublisher] = useState('')\n\n  const postsApi = 'http://127.0.0.1:8000/api/books'\n  const putPostApi = 'http://127.0.0.1:8000/api/book'\n\n  useEffect(() => {\n    fetch(postsApi)\n      .then(response => response.json())\n      .then(posts => setPosts(posts))\n  },[])\n\n  const putPost = () => {\n    var options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        title,\n        author,\n        publisher\n      })\n    };\n\n    fetch(putPostApi, options)\n      .then(response => response.json())\n      .then(console.log('OK'));\n  }\n\n\n  const deletePost = (id) => {\n    var options = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    };\n\n    fetch(putPostApi +  '/' + id, options)\n      .then(response => response.json())\n      .then(console.log('OK'));\n  }\n\n\n  console.log(title, author, publisher)\n\n  return (\n    <div>\n      <h2>Test Posts</h2>\n      <div>\n        <label>Title : <input type=\"text\" value={title} placeholder='Enter title' onChange={e => setTitle(e.target.value)}/></label>\n        <label>Author : <input type=\"text\" value={author} placeholder='Enter author' onChange={e => setAuthor(e.target.value)}/></label>\n        <label>Publisher : <input type=\"text\" value={publisher} placeholder='Enter publisher' onChange={e => setPublisher(e.target.value)}/></label>\n      </div>\n      <div>\n        <p>{title || 'Title'} - {author || 'Author'} - {publisher || 'Publisher'}</p>\n      </div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>{post.id} - {post.title} - {post.author} - {post.publisher}</li>\n        ))\n        }\n      </ul>\n      <button onClick={putPost}>Submit</button>\n      <button onClick={() => deletePost}>Submit</button>\n    </div>\n  )\n}\n\nexport default Posts"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}